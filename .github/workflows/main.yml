name: Build and Test with Proxy

on:
  push:
    branches:
      - main

jobs:
  start_proxy_and_build:
    runs-on: ubuntu-latest
    needs: [create_scan_in_IR_Portal, ecr_details]
    services:
      pse:
        image: 282904853176.dkr.ecr.us-west-2.amazonaws.com/invisirisk/pse-proxy:latest
        credentials:
          username: ${{needs.ecr_details.outputs.ecr_username}}
          password: ${{needs.ecr_details.outputs.ecr_token}}
    env:
      PSE_DEBUG_FLAG: --alsologtostderr
      POLICY_LOG: t
      INVISIRISK_JWT_TOKEN: ${{secrets.VB_API_KEY}}
      INVISIRISK_PORTAL: https://app.stage.invisirisk.com/
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    container:
      image: node:18-alpine
      options: --cap-add=NET_ADMIN --dns=8.8.8.8
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      # Step 1: Print Scan ID (for debug purposes)
      - name: Print Scan ID
        env: 
          SCAN_ID: ${{ needs.create_scan_in_IR_Portal.outputs.scan_id }}
        run: echo $SCAN_ID

      # Step 2: Use PSE Action (Make sure to provide the correct GitHub token)
      - name: PSE Action
        uses: invisirisk/pse-action@v1.0.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Step 5: Install dependencies
      - name: Install dependencies
        run: |
          npm install
          npm ci

      # Step 6: Build and test the application
      - name: Build and test
        run: |
          npm run build --if-present
          npm test

      # Step 7: Commit and push changes (if there are any)
      - name: Commit and push changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "chore: automated build and test updates [skip ci]"
            git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
          else
            echo "No changes to commit"
          fi
